- name: Download and Deploy EARs to WebSphere
  hosts: 10.112.30.40
  become: yes

  vars:
    container_name: ""  #Container name will be entered at AWX Launch time
    jenkins_user: "{{ jenkins_user }}"
    jenkins_token: "{{ jenkins_token }}"
    was_user: "{{ was_user }}"
    was_password: "{{ was_password }}"
    ear_dest_dir: "/home/anandyala/WAS/DockerTS/ear"
    ear_container_dir: "/opt/WAS/ear"
    script_container_dir: "/opt/WAS/scripts"
    update_scripts_dir: "/home/anandyala/WAS/DockerTS/scripts"

    ear_downloads:
      - url: "http://mdcmwp-jenkins.mcd.ifox.loc:8080/view/eMMIS/job/eMMIS_Apr_June_Release/lastSuccessfulBuild/artifact/masterBuild/artifacts/medicaid_EAR6.ear"
        dest: "{{ ear_dest_dir }}/medicaid_EAR6.ear"
      - url: "http://mdcmwp-jenkins.mcd.ifox.loc:8080/view/eMMIS/job/eMMIS_Apr_June_Release/lastSuccessfulBuild/artifact/masterBuild/artifacts/medicaidSupplementsEAR.ear"
        dest: "{{ ear_dest_dir }}/medicaidSupplementsEAR.ear"

  tasks:

    - name: Fail if container_name is not provided
      fail:
        msg: "ERROR: Container name must be provided at launch!"
      when: container_name == ""

    - name: Ensure EAR destination directory exists on host
      file:
        path: "{{ ear_dest_dir }}"
        state: directory
        mode: '0755'
        owner: anandyala
        group: anandyala

    - name: Download EAR files from Jenkins
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        url_username: "{{ jenkins_user }}"
        url_password: "{{ jenkins_token }}"
        force_basic_auth: yes
        force: yes
        mode: '0644'
      loop: "{{ ear_downloads }}"

    - name: Ensure EAR and script directories exist inside container
      block:
        - name: Create EAR directory inside container
          command: docker exec {{ container_name }} mkdir -p {{ ear_container_dir }}

        - name: Create scripts directory inside container
          command: docker exec {{ container_name }} mkdir -p {{ script_container_dir }}

    - name: Remove old EARs inside container
      block:
        - name: Remove old medicaid EAR
          command: docker exec {{ container_name }} rm -f {{ ear_container_dir }}/medicaid_EAR6.ear

        - name: Remove old medicaidSupplementsEAR EAR
          command: docker exec {{ container_name }} rm -f {{ ear_container_dir }}/medicaidSupplementsEAR.ear

    - name: Copy medicaid_EAR6.ear to container
      command: docker cp {{ ear_dest_dir }}/medicaid_EAR6.ear {{ container_name }}:{{ ear_container_dir }}/medicaid_EAR6.ear

    - name: Copy medicaidSupplementsEAR.ear to container
      command: docker cp {{ ear_dest_dir }}/medicaidSupplementsEAR.ear {{ container_name }}:{{ ear_container_dir }}/medicaidSupplementsEAR.ear

    - name: Copy update_medicaid_app.py script to container
      command: docker cp {{ update_scripts_dir }}/update_medicaid_app.py {{ container_name }}:{{ script_container_dir }}/update_medicaid_app.py

    - name: Copy updatemedicaidSupplements_app.py script to container
      command: docker cp {{ update_scripts_dir }}/updatemedicaidSupplements_app.py {{ container_name }}:{{ script_container_dir }}/updatemedicaidSupplements_app.py

    - name: Deploy medicaid_EAR6.ear inside Docker using the script
      command: >
        docker exec {{ container_name }}
        /opt/IBM/WebSphere/AppServer_Emmis/profiles/AppSrv01_eMMIS/bin/wsadmin.sh
        -lang jython
        -user {{ was_user }}
        -password {{ was_password }}
        -f {{ script_container_dir }}/update_medicaid_app.py
        {{ ear_container_dir }}/medicaid_EAR6.ear

    - name: Deploy medicaidSupplementsEAR.ear inside Docker using the script
      command: >
        docker exec {{ container_name }}
        /opt/IBM/WebSphere/AppServer_Emmis/profiles/AppSrv01_eMMIS/bin/wsadmin.sh
        -lang jython
        -user {{ was_user }}
        -password {{ was_password }}
        -f {{ script_container_dir }}/updatemedicaidSupplements_app.py
        {{ ear_container_dir }}/medicaidSupplementsEAR.ear
