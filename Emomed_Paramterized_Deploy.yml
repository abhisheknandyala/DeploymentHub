- name: Download and Deploy EARs to WebSphere and WebSphere Portal
  hosts: WAS_Hosts
  become: yes

  vars:
    jenkins_base_url: ""   # Prompted at launch
    jenkins_build_number: ""  # Prompted at launch
    container_name: ""  # Prompted at launch

    jenkins_user: "{{ jenkins_user }}"
    jenkins_token: "{{ jenkins_token }}"

    was_user: "{{ was_user }}"     # WAS credentials
    was_password: "{{ was_password }}"
    wps_user: "{{ wps_user }}"     # WPS credentials
    wps_password: "{{ wps_password }}"

    ear_dest_dir: "/home/anandyala/WAS/Emomed/ear"
    update_scripts_dir: "/home/anandyala/WAS/Emomed/scripts"
    ear_container_dir: "/opt/WAS/ear"
    script_container_dir: "/opt/WAS/scripts"
    deploy_script_path: "/home/anandyala/WAS/Emomed/scripts/Emomed_Update_ear.py"

    ear_mappings:
      - { ear_file: "EmomedWasEAR.ear", app_name: "EmomedWasEAR", server_type: "was" }
      - { ear_file: "MessageDrivenEJBEAR.ear", app_name: "MessageDrivenEJBEAR", server_type: "was" }
      - { ear_file: "CommonAdminUtilsEAR.ear", app_name: "CommonAdminUtilsEAR", server_type: "wps" }
      - { ear_file: "EmomedPortalEAR.ear", app_name: "EmomedPortalEAR", server_type: "wps" }
      - { ear_file: "HCPCVaadinEAR.ear", app_name: "HCPCVaadinEAR", server_type: "wps" }

    was_profile_wsadmin: "/opt/IBM/WebSphere/AppServer/profiles/AppSrv01/bin/wsadmin.sh"
    wps_profile_wsadmin: "/opt/HCL/wp_profile/bin/wsadmin.sh"

  tasks:

    - name: Fail if critical values are not provided
      fail:
        msg: "ERROR: container_name, jenkins_base_url, build number, or credentials are missing!"
      when: container_name == "" or jenkins_base_url == "" or jenkins_build_number == "" or was_user == "" or was_password == "" or wps_user == "" or wps_password == ""

    - name: Ensure EAR destination directory exists
      file:
        path: "{{ ear_dest_dir }}"
        state: directory
        owner: anandyala
        group: anandyala
        mode: '0755'

    - name: Ensure update_scripts_dir exists on host
      file:
        path: "{{ update_scripts_dir }}"
        state: directory
        owner: anandyala
        group: anandyala
        mode: '0755'
    
    - name: Copy Emomed_Update_ear.py to update_scripts_dir on host
      copy:
        src: "Emomed_Update_ear.py"
        dest: "{{ update_scripts_dir }}/Emomed_Update_ear.py"
        owner: anandyala
        group: anandyala
        mode: '0755'

    - name: Download all EARs from Jenkins
      get_url:
        url: "{{ jenkins_base_url }}/{{ jenkins_build_number }}/artifact/masterBuild/artifacts/{{ item.ear_file }}"
        dest: "{{ ear_dest_dir }}/{{ item.ear_file }}"
        url_username: "{{ jenkins_user }}"
        url_password: "{{ jenkins_token }}"
        force_basic_auth: yes
        force: yes
        mode: '0644'
      loop: "{{ ear_mappings }}"

    - name: Create EAR and scripts directories inside container
      block:
        - name: Create EAR directory
          command: docker exec {{ container_name }} mkdir -p {{ ear_container_dir }}

        - name: Create scripts directory
          command: docker exec {{ container_name }} mkdir -p {{ script_container_dir }}

    - name: Copy Emomed_Update_ear.py script to container
      command: docker cp {{ deploy_script_path }} {{ container_name }}:{{ script_container_dir }}/Emomed_Update_ear.py

    - name: Remove old EARs inside container
      loop: "{{ ear_mappings }}"
      loop_control:
        loop_var: ear
      command: docker exec {{ container_name }} rm -f {{ ear_container_dir }}/{{ ear.ear_file }}

    - name: Copy EARs into container
      loop: "{{ ear_mappings }}"
      loop_control:
        loop_var: ear
      command: docker cp {{ ear_dest_dir }}/{{ ear.ear_file }} {{ container_name }}:{{ ear_container_dir }}/{{ ear.ear_file }}

    - name: Deploy EARs inside container
      loop: "{{ ear_mappings }}"
      loop_control:
        loop_var: ear
      command: >
        docker exec {{ container_name }}
        {{
          (ear.server_type == 'was') | ternary(was_profile_wsadmin, wps_profile_wsadmin)
        }}
        -lang jython
        -user {{
          (ear.server_type == 'was') | ternary(was_user, wps_user)
        }}
        -password {{
          (ear.server_type == 'was') | ternary(was_password, wps_password)
        }}
        -f {{ script_container_dir }}/Emomed_Update_ear.py
        {{ ear_container_dir }}/{{ ear.ear_file }}
        {{ ear.app_name }}
      args:
        executable: /bin/bash
